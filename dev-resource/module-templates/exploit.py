#######
# Module/Exploit: Module Name
#######

from libs.terasploit.framework.opts.opt_container import *
from libs.terasploit.framework.info.info_container import *
from libs.terasploit.framework.module.exploit import *

class TerasploitModule(Exploit):

    def initialize(self,info_only: bool = False) -> None:
        update_info (
            {
                'License'     : 'Terasploit Framework License (BSD)',
                'Name'        : ' -- module name -- ',
                'Module'      : Module.exploit,
                "Platform"    : Platform.MULTI,
                "Arch"        : Arch.MULTI,
                'Payload'     : ' -- payload path -- ',
                'Author'      : [
                    ' -- author --'
                ],
                'Description' : [
                    ' -- description of the module -- '
                ],
            }
        )

        if info_only:
            return

        register_option (module="exploit",reset=True)

    def exploit(self) -> None|str:
        try:
            pass
            
        except Exception as error:
            print_info (error, type='YELLOW')
            return 'failed'
